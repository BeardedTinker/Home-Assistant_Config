#####
# Project author: Debasish Dutta
# Kit supplied by PCBWay: # https://www.pcbway.com/project/shareproject/Solar_Powered_WiFi_Weather_Station_V3_0.html
# Code adapted and expanded by Bearded Tinker ;)
# GitHub: https://github.com/BeardedTinker/SolarWS
# 
# Additional modules that can be use (and code takes them into account)
# BME280  temperature, humidity and pressure OR BMP280 for temperature and pressure
# DS18B20 additional temperature measurments
# BH1750  lux sensor
# SI1145  UV index
# TX20    Wind speed and direction  
#
#####

# Configuration variables

substitutions:
  display_name: solarws
  awake_duration: 30s
  sleep_duration: 5min
  battery_full: '3.16'
  battery_empty: '2.492'
  battery_diff: '${battery_full}-${battery_empty}'

esphome:
  name: solarweather
# On boot run script to see if Deep Sleep is prevented or not  
  on_boot:
    then:
      - script.execute: consider_deep_sleep

esp32:
  board: esp-wrover-kit

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_key

api:

# Enable logging
logger:

ota:
# On OTA end toggle off HA boolean
  on_end:
    then:
      - logger.log: 'OTA successful - flipping switch'
      - homeassistant.service: 
          service: input_boolean.turn_off
          data:
            entity_id: input_boolean.solarws_prevent_deep_sleep

i2c:
  sda: 21
  scl: 22
  scan: true
  id: bus_a

# Detect Dallas sensor address
dallas:
  - pin: GPIO4

# Check status of Home Assistant input boolean to prevent Deep Sleep
# Used for OTA - has BIG impact on battery life
binary_sensor:
  - platform: homeassistant
    id: solarws_prevent_deep_sleep
    name: 'Prevent Solar WS Deep Sleep'
    entity_id: input_boolean.solarws_prevent_deep_sleep

sensor:
# BME280 is used to get temperature, pressure and humidity
# BMP280 only provides temperature and pressure so please comment out hummidity section
#  - platform: bmp280

  - platform: bme280
    address: 0x76
#    update_interval: 25s
    temperature:
      name: '${display_name} WS Temperature'
      oversampling: 4x
      unit_of_measurement: "°C"
      icon: "mdi:thermometer"
      device_class: "temperature"
      state_class: "measurement"
      accuracy_decimals: 1      
    pressure:
      name: '${display_name} Pressure'
      oversampling: 4x
      unit_of_measurement: "hPa"
      device_class: "pressure"
      state_class: "measurement"
    humidity:
      name: '${display_name} Humidity'
      oversampling: 4x
      unit_of_measurement: "%"
      icon: "mdi:thermometer"
      device_class: "humidity"
      state_class: "measurement"

# DS18B20 Dallas temperature sensor
  - platform: dallas
    address: 0xc43c01f096e8b728
    name: '${display_name} Air Temperature'
    unit_of_measurement: "°C"
    icon: "mdi:thermometer"
    device_class: "temperature"
    state_class: "measurement"
    accuracy_decimals: 1    

# ADC platform helps track status of battery
  - platform: adc
    pin: GPIO33
    name: '${display_name} Battery'
    unit_of_measurement: "V"
    icon: "mdi:battery-high"
    device_class: "voltage"
    state_class: "measurement"
    accuracy_decimals: 3
    attenuation: 11db
    id: voltage
#    update_interval: 25s

  - platform: adc
    pin: GPIO33
    name: '${display_name} Battery %'
    attenuation: 11db
    unit_of_measurement: '%'
    filters:
      - lambda: |-
          return ((id(voltage).state - 2.492) / 0.6868 * 100.00);  
#          return ((id(voltage).state - ${battery_empty}) / ${battery_diff} * 100.00);  
#    update_interval: 3sec

# Pulse counter can be used to track rain gauge
  - platform: pulse_counter
    pin:
      number: GPIO25
      inverted: True
      mode: INPUT_PULLUP    
    name: 'Rainfall'
    unit_of_measurement: 'mm'
    filters:
      - multiply: 0.367
    update_interval: 25s

# BH1750 sensor provides lux vaules
  - platform: bh1750
    name: '${display_name} Lux'
    address: 0x23
    unit_of_measurement: "lx"
    icon: "mdi:white-balance-sunny"
    device_class: "illuminance"
    state_class: "measurement"
    update_interval: 25s

# Wind speed sensor
  - platform: pulse_meter
    pin: 
      number: GPIO14
      mode: INPUT_PULLUP
    name: '${display_name} Windspeed Meter'
    icon: 'mdi:weather-windy'
    id: wind_meter
    unit_of_measurement: 'km/h'
    accuracy_decimals: 1
    timeout: 5s
    filters:
      - multiply: 0.02 #1.492mph per rotation so 1 / 60 / 2 * 2.4
      - sliding_window_moving_average: # Helps prevent too many datapoints
          window_size: 5
          send_every: 5

### NOT TESTED/IMPLEMENTED

# TX20 sensor is used for tracking wind speed and direction

#  - platform: tx20
#    wind_speed:
#      name: "Wind speed"
#    wind_direction_degrees:
#      name: "Wind direction degrees"
#    pin:
#      number: GPIO14

deep_sleep:
  id: deep_sleep_control
#  run_duration: 45s
  sleep_duration: ${sleep_duration}
  
script:
  - id: consider_deep_sleep
    mode: queued
    then:
      - delay: ${awake_duration}
      - if:
          condition:
            binary_sensor.is_on: solarws_prevent_deep_sleep
          then:
            - logger.log: 'Skipping sleep, per prevent_deep_sleep'
          else:
            - deep_sleep.enter: deep_sleep_control
      - script.execute: consider_deep_sleep
