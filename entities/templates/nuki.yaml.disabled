- trigger:
  - platform: webhook
    webhook_id: !secret nuki_bridge_webhook

  - platform: event
    event_type: event_template_reloaded

  - platform: state
    entity_id: sensor.nuki_door_sensor_state
    to:
      - "open"
      - "closed"

- binary_sensor:
  - name: "Nuki Door State"
    device_class: door
    state: >
      {% if trigger.platform == 'webhook' %}
        {{ trigger.json.doorsensorState == 3 }}
      {% else %}
        {{ is_state('sensor.nuki_door_sensor_state', 'open') }}
      {% endif %}
    availability: >
      {% if trigger.platform == 'webhook' %}
        {{ trigger.json.doorsensorState != None }}
      {% else %}
        {{ (is_state('sensor.nuki_door_sensor_state', 'open') or is_state('sensor.nuki_door_sensor_state', 'closed')) }}
      {% endif %}
    icon: >
      {% if trigger.platform == 'webhook' %}
        {% set my_state = {1: 'deactivated', 2: 'closed', 3: 'open', 4: 'unknown', 5: 'calibrating'} %}
        {% set trigdoor = my_state[trigger.json.doorsensorState] %}
        {% set my_state = {0: 'uncalibrated', 1: 'locked', 2:'unlocking', 3: 'unlocked', 4: 'locking', 5: 'unlatched', 6: "unlocked (lock ‘n’ go)", 7: 'unlatching', 254: 'motor blocked', 255: 'undefined'} %}
        {% set triglock = my_state[trigger.json.state] %}
      {% else %}
        {% set trigdoor = states('sensor.nuki_door_sensor_state') %}
        {% set triglock = states('sensor.nuki_lock_sensor_state') %}
      {% endif %}
      {% if (trigdoor == 'open') %}
        mdi:door-open
      {% elif trigdoor == 'closed' and triglock == 'locked' %}
        mdi:door-closed-lock
      {% elif trigdoor == 'closed' and triglock == 'unlocked' %}
        mdi:door-closed
      {% else %}
        mdi:alert-box-outline
      {% endif %}
    attributes:
      nuki_id: >
        {% if trigger.platform == 'webhook' %}
          {{ trigger.json.nukiId }}
        {% else %}
          {{ states('sensor.nuki_id') }}
        {% endif %}
      door_state: >
        {% set my_state = {1: 'deactivated', 2: 'closed', 3: 'open', 4: 'unknown', 5: 'calibrating'} %}
        {% if trigger.platform == 'webhook' %}
          {{ my_state[trigger.json.doorsensorState] }}
        {% else %}
          {{ states('sensor.nuki_door_sensor_state') }}
        {% endif %}
      lock_state: >
        {% set my_state = {0: 'uncalibrated', 1: 'locked', 2:'unlocking', 3: 'unlocked', 4: 'locking', 5: 'unlatched', 6: "unlocked (lock 'n' go)", 7: 'unlatching', 254: 'motor blocked', 255: 'undefined'} %}          
        {% if trigger.platform == 'webhook' %}
          {{ my_state[trigger.json.state] }}
        {% else %}
          {{ states('sensor.nuki_lock_sensor_state') }}
        {% endif %}
      lock_battery: >
        {% if trigger.platform == 'webhook' %}
          {{ trigger.json.batteryChargeState }}%
        {% else %}
          {{ states('sensor.nuki_lock_battery_level') }}
        {% endif %}
      lock_battery_critical: >
        {% if trigger.platform == 'webhook' %}
          {{ trigger.json.batteryCritical }}
        {% else %}
          {{ states('sensor.nuki_lock_battery_critical_state') }}
        {% endif %}
      keypad_battery_critical: >
        {% if trigger.platform == 'webhook' %}
          {{ trigger.json.keypadBatteryCritical }}
        {% else %}
          {{ states('sensor.nuki_keypad_battery_critical_state') }}
        {% endif %}
      last_update: "{{ strptime(as_timestamp(now()) | timestamp_local, '%Y%m%d %H:%M:%S') }}"
      trigger_platform: "{{ trigger.platform }}"
      door_sensor_polled: "{{ states('sensor.nuki_door_sensor_state') }}"
      lock_sensor_polled: "{{ states('sensor.nuki_lock_sensor_state') }}"

- sensor:
  - name: "Nuki Bridge Host"
    state: !secret nuki_bridge_host

  - name: "Nuki Bridge Port"
    state: !secret nuki_bridge_port

  - name: "Nuki Bridge Token"
    state: !secret nuki_bridge_token

  - name: "Nuki Device Name"
    state: >
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_info','scanResults')[0]['name'] }}
      {% endif %}
    icon: mdi:alphabetical-variant

  - name: "Nuki Bridge FW Version"
    state: >
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_info','versions')['firmwareVersion'] }}
      {% endif %}
    icon: mdi:numeric

  - name: "Nuki Bridge wifi FW Version"
    state: >
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_info','versions')['wifiFirmwareVersion'] }}
      {% endif %}
    icon: mdi:numeric

  - name: "Nuki Bridge<->Lock BT RSSI"
    device_class: "signal_strength"
    unit_of_measurement: "dB"
    icon: mdi:signal-distance-variant
    state: >
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_info','scanResults')[0]['rssi'] }}
      {% endif %}

  - name: "Nuki Bridge WiFi Connected"
    icon: mdi:wifi-cog
    state: >
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_info','wlanConnected') }}
      {% endif %}

  - name: "Nuki Bridge Cloud Connected"
    icon: mdi:server-network
    state: >
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_info','serverConnected') }}
      {% endif %}

  - name: "Nuki Bridge<->Lock BT State"
    icon: >-
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {% if state_attr('sensor.nuki_endpoint_info','scanResults')[0]['paired'] %}
          mdi:bluetooth-connect
        {% elif not state_attr('sensor.nuki_endpoint_info','scanResults')[0]['paired'] %}
          mdi:bluetooth-off
        {% else %}
          mdi:bluetooth-audio
        {% endif %}
      {% endif %}
    state: >-
      {% if states('sensor.nuki_endpoint_info') == "OK" %}
        {% if state_attr('sensor.nuki_endpoint_info','scanResults')[0]['paired'] %}
          connected
        {% elif not state_attr('sensor.nuki_endpoint_info','scanResults')[0]['paired'] %}
          disconnected
        {% else %}
          Unknown
        {% endif %}
      {% endif %}

  - name: "Nuki ID"
    icon: mdi:numeric
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_list','nukiId') }}
      {% endif %}

  - name: "Nuki Friendly Name"
    icon: mdi:numeric
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_list','name') }}
      {% endif %}

  - name: "Nuki Door Sensor State"
    icon: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {% set door_icon = state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['doorsensorState'] %}
        {% set lock_icon = state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['state'] %}
        {% if door_icon == 2 and lock_icon == 3 %}
          mdi:door-closed
        {% elif door_icon == 2 and lock_icon == 1 %}
          mdi:door-closed-lock
        {% elif door_icon == 3 %}
          mdi:door-open
        {% endif %}
      {% endif %}
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {% set my_state = {1: 'deactivated', 2: 'closed', 3: 'open', 4: 'unknown', 5: 'calibrating'} %}
        {{ my_state[state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['doorsensorState']] }}
      {% endif %}

  - name: "Nuki Lock Sensor State"
    icon: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {% set lock_icon = state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['state'] %}
        {% if lock_icon == 1 %}
          mdi:lock-outline
        {% elif lock_icon == 3 %}
          mdi:lock-open-outline
        {% endif %}
      {% endif %}
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {% set my_state = {0: 'uncalibrated', 1: 'locked', 2:'unlocking', 3: 'unlocked', 4: 'locking', 5: 'unlatched', 6: "unlocked (lock ‘n’ go)", 7: 'unlatching', 254: 'motor blocked', 255: 'undefined'} %}
        {{ my_state[state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['state']] | default('loading...') }}
      {% endif %}

  - name: "Nuki Lock FW Version"
    icon: mdi:numeric
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_list','firmwareVersion') }}
      {% endif %}

  - name: "Nuki Lock Battery Critical State"
    icon: mdi:battery-alert-variant-outline
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['batteryCritical'] }}
      {% endif %}

  - name: "Nuki Keypad Battery Critical State"
    icon: mdi:battery-alert-variant-outline
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {{ state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['keypadBatteryCritical'] }}
      {% endif %}

  - name: "Nuki Lock Battery Level"
    device_class: "battery"
    unit_of_measurement: "%"
    icon: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {% set battery_level = state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['batteryChargeState'] | default(0) | int %}
        {% set battery_charging = state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['batteryCharging'] %}
        {% set battery_round = (battery_level / 10) | int * 10 %}
        {% if battery_round >= 100 and not battery_charging %}
          mdi:battery
        {% elif battery_round >= 100 and battery_charging %}
          mdi:battery-charging
        {% elif battery_round > 0 and not battery_charging %}
          mdi:battery-{{ battery_round }}
        {% elif battery_round > 0 and battery_charging %}
          mdi:battery-charging-{{ battery_round }}
        {% else %}
          mdi:battery-alert-variant-outline
        {% endif %}
      {% endif %}
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {% set battery_level = state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['batteryChargeState'] | default(0) | int %}
        {% if state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['batteryCharging'] %}
          {{ battery_level }}
        {% else %}
          {{ battery_level }}
        {% endif %}
      {% endif %}

  - name: "Nuki Last Activity"
    icon: mdi:clock-check-outline
    state: >
      {% if states('sensor.nuki_endpoint_list') == "OK" %}
        {{ (as_timestamp(state_attr('sensor.nuki_endpoint_list', 'lastKnownState')['timestamp'])) | timestamp_custom("%H:%M (%b %d)") }}
      {% endif %}